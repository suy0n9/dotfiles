- hosts: localhost
  connection: local
  gather_facts: no
  become: no
  vars:
    homebrew_taps:
      - homebrew/binary
      - homebrew/dupes
      - caskroom/cask
    homebrew_packages:
      - { name: readline }
      - { name: openssl }
      - { name: openssl, state: linked, install_options: force }
      - { name: python }
      - { name: pyenv }
      - { name: ansible }
      - { name: git }
      - { name: mercurial }
      - { name: zsh, install_options: disable-etcdir }
      - { name: wget }
      - { name: w3m }
      - { name: curl }
      - { name: tree }
      - { name: mysql }
      - { name: sqlite }
      - { name: redis }
      - { name: ghq }
      - { name: peco }
      - { name: gibo }
    homebrew_cask_packages:
      - { name: alfred }
      - { name: iterm2 }
      - { name: firefox }
      - { name: google-chrome }
      - { name: google-japanese-ime }
      - { name: adobe-reader }
      - { name: java }
      - { name: skype }
      - { name: kindle }
      - { name: slack }
      - { name: skitch }
      - { name: boostnote }
      - { name: visual-studio-code }
      - { name: virtualbox }
      - { name: sequel-pro }
      - { name: docker }

  tasks:
    - name: add homebrew tap repository
      homebrew_tap: tap={{ item }} state=present
      with_items: "{{ homebrew_taps }}"

    # update homebrew
    - name: brew update
      homebrew: update_homebrew=yes

    # homebrew
    - name: install homebrew package
      homebrew: >
        name={{ item.name }}
        state={{ item.state | default('latest') }}
        install_options={{
          item.install_options | default() | join(',')
          if item.install_options is not string
          else item.install_options
        }}
      with_items: "{{ homebrew_packages }}"
      register: brew_result

    # homebrew-cask
    - name: install homebrew-cask
      homebrew: name=cask state=latest
    - name: install homebrew-cask package
      homebrew_cask:
        name={{ item.name }}
        state={{ item.state|default('installed') }}
        install_options='appdir=/Applications'
      with_items: "{{ homebrew_cask_packages }}"
      ignore_errors: True
      register: cask_result

    # finder defaults
    - name: finder show all files
      osx_defaults:
        domain: com.apple.finder
        key: AppleShowAllFiles
        type: bool
        value: true
        state: present
      notify: Restart Finder

    - name: finder show all extensions
      osx_defaults:
        domain: com.apple.finder
        key: AppleShowAllExtensions
        type: bool
        value: true
        state: present
      notify: Restart Finder

    - name: finder show pathbar
      osx_defaults:
        domain: com.apple.finder
        key: ShowPathbar
        type: bool
        value: true
        state: present
      notify: Restart Finder

    - name: finder show status bar
      osx_defaults:
        domain: com.apple.finder
        key: ShowStatusBar
        type: bool
        value: true
        state: present
      notify: Restart Finder

    # dock defaults
    - name: dock tilesize
      osx_defaults:
        domain: com.apple.dock
        key: tilesize
        type: int
        value: 30
        state: present
      notify: Restart Dock

    - name: dock orientation left
      osx_defaults:
        domain: com.apple.dock
        key: orientation
        type: string
        value: left
        state: present
      notify: Restart Dock

    - name: dock magnification
      osx_defaults:
        domain: com.apple.dock
        key: magnification
        type: bool
        value: true
        state: present
      notify: Restart Dock

    - name: dock auto hide
      osx_defaults:
        domain: com.apple.dock
        key: autohide
        type: int
        value: 1
        state: present
      notify: Restart Dock

  handlers:
      - name: run fc-cache
        shell: fc-cache -vf
